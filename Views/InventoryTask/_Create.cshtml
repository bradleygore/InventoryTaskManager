@model InventoryMgr.Models.InventoryTaskItem
<h2>
    Create new Inventory Task</h2>
@if (ViewBag.InventoryItemsCount == null || ViewBag.InventoryItemsCount < 1)
  {
        <label class="invalidAction">You currently have no Inventory Items to attached an Inventory Task to.</label>
        <input type="button" id="btnCancelCreateInventoryTask" value="Back" />
  }
  else
  {
      using (Html.BeginForm("", "api/InventoryTasks", FormMethod.Post, new { id = "frmCreateITask", @data_bind = "submit: createInventoryTask" }))
      {
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>InventoryTaskItem</legend>
                <input type="hidden" id="UserId" name="UserId" value="@ViewBag.UserId" />
                <input type="hidden" id="TaskListId" name="TaskListId" value="@ViewBag.TaskListId" />
                <input type="hidden" id="TaskDate" name="TaskDate" value="@DateTime.Today" />
                <input type="hidden" id="Completed" name="Completed" value="false" />
                <div class="editor-label">
                    @Html.LabelFor(model => model.InventoryItemId)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.InventoryItemId, new SelectList(ViewBag.InventoryItems, "Value", "Text"))
                    @Html.ValidationMessageFor(model => model.InventoryItemId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Name)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Quantity)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Quantity, new { required = "required", type = "number" })
                    @Html.ValidationMessageFor(model => model.Quantity, "*")
                </div>
                <p>
                    <input type="submit" value="Create" />
                    <input type="button" id="btnCancelCreateInventoryTask" value="Cancel" />
                </p>
            </fieldset>
      }
  }

